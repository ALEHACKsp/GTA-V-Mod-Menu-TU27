#ifndef __GTAVNATIVES_H_
#define __GTAVNATIVES_H_

#pragma once
#include <xtl.h>
#include <string>
#include <vector>

using namespace std;


typedef struct _GTAVNativeCall {
int *returnValue;
int argumentCount;
int *argumentData;
} GTAVNativeCall;

typedef struct _GTAVNative {
DWORD hashValue;
DWORD functionOffset;
} GTAVNative;

typedef struct _Vector3 {
float x;
float y;
float z;
} Vector3;

void InitNativeHook();
int CallNative(int nativeAddress, int argumentCount, ...);
void SET_PED_CAN_RAGDOLL(INT ped, BOOL toggle);
VOID SET_TEXT_EDGE(INT r1, INT r2, INT r3, INT r4, INT r5);
VOID SET_TEXT_DROPSHADOW(INT r1, INT r2, INT r3, INT r4, INT r5);
VOID SET_TEXT_SCALE(FLOAT X, FLOAT Y);
VOID SET_TEXT_COLOUR(BYTE A, BYTE R, BYTE G, BYTE B);
bool IS_ENTITY_TOUCHING_ENTITY(int player, int entity);
void NETWORK_SEND_TEXT_MESSAGE(char *message, int player);
VOID SET_TEXT_OUTLINE();
void NETWORK_BUY_BOUNTY(int ped, int p1, int p2, int p3);
BOOL NETWORK_AM_I_MUTED_BY_PLAYER(int player);
BOOL IS_PLAYER_FREE_AIMING_AT_ENTITY(int player, int entity);
void GET_WORLD_POSITION_OF_ENTITY_BONE(int entity, int boneIndex, float* Out);
void GIVE_WEAPON_COMPONENT_TO_PED(int playerid, int weapon, int component);
VOID SET_TEXT_WRAP(FLOAT X, FLOAT Y);
void NETWORK_BUY_AIRSTRIKE(int cost, int p1, int p2);
void ROLL_DOWN_WINDOWS(int vehicle);
void NETWORK_SPENT_BUY_OFFTHERADAR(int ped, int p1, int p2);
VOID SET_TEXT_CENTRE(INT Value);
bool get_ped_last_weapon_impact_coord2(int Ped, float *Co);
bool get_ped_last_weapon_impact_coord(int PedID, float* OutCoords);
bool Custom_get_ped_last_weapon_impact_coord(int PedID, float* OutCoords);
bool get_ped_last_weapon_impact_coord3(int ped, float *Outpos);
void AddExplosion1(float X, float Y, float Z, int ExplosionType, float radius, bool playsound, bool novisual, float Camshake);
VOID SET_TEXT_FONT(INT Font);
void SET_SEETHROUGH(BOOL Toggle);
void SET_NIGHTVISION(BOOL Toggle);
void SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(int ped, int state);
BOOL START_PARTICLE_FX_NON_LOOPED_AT_COORD(char *effectName, float x,float y, float z, float xRot, float yRot, float zRot, float scale, BOOL p8, BOOL p9, BOOL p10);
void SET_ENTITY_ROTATION2(int PedID, Vector3* Rot);
void SET_PED_INTO_VEHICLE(INT PED_ID, INT VEH_ID, INT r2);
VOID GET_PED_LAST_WEAPON_IMPACT_COORD(INT PED_ID, PFLOAT Out);
void attach_entity_to_entity420(int car0, int car1, int boneIndex, float x0, float y0, float z0, float x1, float y1, float z1, int unk1 = 0, int unk2 = 0, int unk3 = 0, int unk4 = 0, int unk5 = 2, int unk6 = 1);
void CLEAR_ALL_PED_PROPS(int ped);
void _SET_PTFX_ASSET_NEXT_CALL(char *name);
void REQUEST_NAMED_PTFX_ASSET(char *fxName);
void _ADD_SPECFX_EXPLOSION(float x, float y, float z, int explosionType, int explosionFx, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake);
void SET_PARTICLE_FX_NON_LOOPED_ALPHA(float alpha);
BOOL HAS_WEAPON_ASSET_LOADED(int Hash);
void SHOOT_SINGLE_BULLET_BETWEEN_COORDS1(float* x, float* y, int unk, int unk1, int hash, int ped, int unk2, int unk3, float speed);
void GET_PED_LAST_WEAPON_IMPACT_COORD(int PedID, float* Out);
bool START_PARTICLE_FX_NON_LOOPED_ON_ENTITY(char *effectName, int entity, float xOffset, float yOffset, float zOffset, float xRot,float yRot, float zRot, float scale, BOOL p9, BOOL p10, BOOL p11);
void CLEAR_PED_PROP(int ped, int propId);
int GET_CONTROL_VALUE(int index, int control);
void unk_0x06BB5CDA(char* Name);
void _STOP_SCREEN_EFFECT(char *effectName);
void SET_PLAYER_TARGETING_MODE(int index);
void MODIFY_WATER(float x, float y, float z, float height);
void SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(int vehicle, int r, int g, int b);
void _START_SCREEN_EFFECT(char *effectName, int playLength, bool loop);
bool IS_PED_MODEL(int ped, int modelHash);
void DETACH_ENTITY_CUSTOM(int car0, int car1, BOOL p1, BOOL p2);
int GET_PLAYER_PED(int player);
void network_earn_from_rockstar(int amount);
void SET_PED_WEAPON_TINT_INDEX(int playerid, int weapon, int colorIndex);
void TASK_GO_STRAIGHT_TO_COORD(int ped, float x, float y, float z, float speed, int timeout, float targetHeading, float distanceToSlide);
VOID CREATE_AMBIENT_PICKUP_CUSTOM(INT Hash, PFLOAT Origin, INT r5, INT r6, INT r7, INT r8, INT r9);
void DisplayText(char *text, float X2d, float Y2d);
BOOL NETWORK_IS_PLAYER_TALKING_CUSTOM(int player);
void SET_PED_CURRENT_WEAPON_VISIBLE(int ped, int p1, int p2, int p3, int p4);
void ADD_OWNED_EXPLOSION(int ped, float x, float y, float z, int explosionType, float damageScale, BOOL isAudible, BOOL isInvisible, float cameraShake);
void GtavNativeLoadHook(unsigned int r3, unsigned int r4);
void set_player_wanted_level(int playerid, int wantedstars);
void set_ped_infinite_ammo(int index, bool active);
void set_override_weather(char *weather);
void SET_PED_RANDOM_PROPS(int ped);
char *GetPlayerName(int index);
void set_cops_on_player(int player, int stars);
void SET_PED_PROP_INDEX(int ped, int componentId, int drawableId, int TextureId, BOOL isMP);
BOOL STAT_SET_BOOL(DWORD statName, BOOL value, BOOL save);
void draw_sprite(char *str, char *str2, float f1, float f2, float f3, float f4, float f5, int r, int g, int b, int a);
void request_streamed_texture_dict(char *str, int unk);
bool has_streamed_texture_dict_loaded(char *str);
int veh_to_net(int vehicle);
void set_cam_rot(int cam, float *vec);
bool unk_0xCD71F11B(int ped);
int create_cam(char *cam, int unk);
void attach_cam_to_ped_bone(int cam, int ped, int boneid, float x, float y, float z, bool unk);
void set_cam_active(int cam, bool active);
void render_script_cams(int unk, int unk1, int unk2, int unk3, int unk4);
void set_entity_as_mission_entity(int veh, int unk, int unk1);
void draw_rect(float xpos, float ypos, float xlen, float ylen, int r, int g, int b, int a);
void create_ambient_pickup(int Hash, float* Pos, int r5, int r6, int r7, int r8, int r9);
int get_first_blip_info_id(int blip);
void delete_object(int object);
bool does_blip_exist(int blip);
void get_blip_coords(int blip, float* OutPos);
int network_request_control_of_network_id(int id);
bool network_request_control_of_entity(int entity);
bool HAS_NAMED_PTFX_ASSET_LOADED(char *fxName);
bool network_has_control_of_network_id(int id);
bool unk_0x8866D9D0(int PLAYER_ID, int* OutObject);
bool IsEntityObject(int entity);
bool network_does_network_id_exist(int id);
bool is_ped_in_any_vehicle(int ped);
void FixCar(int carhandle);
void network_session_kick_player(int playerindex);
void GiveWeaponDelayed(int playerid, int weapon, int ammo, int unk);
int GET_ENTITY_BONE_INDEX_BY_NAME(int entity, char *boneName);
bool is_entity_in_water(int entity);
bool is_control_just_released (int unk, int control);
void SET_PLAYER_SIMULATE_AIMING(int ped, bool toggle);
void task_arrest_ped(int ped, int aimped);
void RemoveWeapons(int playerid);
void SET_VEHICLE_TIMED_EXPLOSION(int veh, int ped, bool toggle);
void set_number_plate(int Vehicle, char* Text);
bool is_string_null_or_empty(char* string);
char* get_onscreen_keyboard_result();
bool is_system_ui_being_displayed();
void unk_0xF42C43C7(char* String);
void unk_0x27A244D8(char* String);
void unk_0x38F82261(int Time, int unk);
void display_onscreen_keyboard(int arg0, char* str0, char* str1, char* str2, char* str3, char* str4, int arg1);
void GiveCash(int Amount, int PedHandle);
void set_vehicle_dirt_level(int vehicle, float dirt);
void REMOVE_WEAPON_FROM_PED(int ped,int weapon);
void SMASH_VEHICLE_WINDOW(int vehicle, int window);
int get_vehicle_max_number_of_passengers(int vehicle);
bool is_vehicle_seat_free(int vehicle, int seat);
void task_warp_ped_into_vehicle(int ped, int vehicle, int seat);
void set_vehicle_as_no_longer_needed(int vehicle);
void delete_vehicle(int vehicle);
void set_engine_health(int vehicle, float health);
void set_ped_random_component_variation(int Ped, int Val);
void set_vehicle_undriveable(int veh, int driveable);
void set_text_font(int font);
float get_vehicle_engine_health(int handle);
void request_ipl(char *str);
bool unk_0x9ACC6446(char *type);
void unk_0xCFEA19A9(char *type);
void unk_0x9C720B61(char *type);
void unk_0x7B689E20(float f1, float f2, float f3);
void unk_0x633F8C48(char *type, float x, float y, float z, float f1, float f2, float f3, float f4, int unk, int unk1, int unk2);

void set_vehicle_door_shut(int veh, int door);
//void set_ped_component_variation(int Ped, int r4, int r5, int r6, int r7);
int create_object(int ModelHash, float X, float Y, float Z, int Unk1 = 1, int Unk2 = 1, int Unk3 = 0);// returns the handle
void set_ped_into_vehicle(int Ped, int Vehicle, int Seat);
void set_ped_infinite_ammo_clip(int ped, bool active);
void set_stat_bool(int stat, bool val);
void set_stat_int(int stat, int val);
void GetEntityCoords(int PedID, float* Out);
void set_cinematic_button_active(bool active);
int GetCarCharIsIn2(int PedHandle, int PlayerID);
bool is_ped_getting_into_a_vehicle(int PedHandle);
bool is_ped_running(bool running);
int NetworkIsPlayerActive(int index);
void SetPlayerInvincible(int index, bool active);
void set_entity_proofs(int entity, bool active, bool active2, bool active3, bool active4, bool active5, bool active6, bool active7, bool active8);
void CarVisibleDamage(int carhandle, bool damage);
void set_entity_can_be_damaged(int carhandle, bool damage);
bool is_control_just_pressed(int unk, int control);
bool is_control_pressed(int unk, int control);
int unk_0xDB718B21(int vehicle, char* string, int unk);
void get_offset_from_entity_in_world_coords(int vehicle, float x, float y, float z, float *Out);
void set_vehicle_mod(int vehicle, int mod, int index, int var);
void set_vehicle_mod_kit(int vehicle, int unk);
float* get_coord_in_front_of_gameplaycam(float range, float* OutCoords);
void set_vehicle_tyre_smoke_color(int vehicle, int r, int g, int b);
void set_vehicle_window_tint(int veh, int tint);
void set_vehicle_door_open(int veh, int door);
BOOL STAT_SET_INT(DWORD statName, int value, BOOL save);
void set_ped_component_variation(int ped, int unk, int unk1, int unk2, int unk3);
void get_gameplay_cam_coord(float* Out);
void get_gameplay_cam_rot(int rot, float* Out);
bool is_ped_shooting(int ped);
void set_vehicle_tyres_can_burst(int vehicle, bool pop);
void set_vehicle_wheel_type(int vehicle, int type);
void remove_vehicle_mod(int vehicle, int index);
void toggle_vehicle_mod(int vehicle, int index, bool toggle);
void set_vehicle_door_broken(int vehicle, int unk, int unk2);
void draw_light_with_range(float x, float y, float z, int r, int g, int b, float rangemin, float rangemax);
float get_entity_speed(int handle);
void shoot_single_bullet_between_coords(float *i, float *a, int unk, int unk1, int hash, int ped, int unk2, int unk3, float speed);
int PlayerId();
unsigned int PlayerPedId();
unsigned int GET_PLAYERS_LAST_VEHICLE();
float get_entity_pitch(int entity);
void set_entity_rotation3(int entity,float pitch,float roll,float yaw);
void load_all_objects_now();
void set_entity_rotation(int entity,float pitch,float roll,float yaw,int unk2,int unk1);
bool get_ground_z_for_3d_coord(float x, float y, float z, float *OutZ);
void set_script_as_no_longer_needed(char* script);
bool start_new_script(char* script, int arg);
bool has_script_loaded(char* script);
void terminate_all_scripts_with_this_name(char* script);
void reserve_network_mission_vehicles(int vehicles);
bool does_script_exist(char* script);
bool request_script(char* script);
void clear_ped_tasks(int ped);
bool has_entity_clear_los_to_entity(int ped, int entity, int unk);
void clear_ped_tasks_immediately(int ped);
void task_aim_gun_at_entity(int ped, int entity, int unk, int unk1);
bool request_anim_set(char *set);
bool has_anim_set_loaded(char *set);
void unk_0xA817CDEB(int ped, char *anim, int unk);
bool request_anim_dict(char *dict);
void task_cower(int ped, int unk);
void task_leave_vehicle(int ped, int veh, int unk);
bool has_anim_dict_loaded(char *dict);
void wait(int time);
unsigned int GetPlayerHandle(int index);
void hide_help_text_this_frame();
void disable_control_action(int unk, int unk2);
bool is_entity_dead(int ped);
bool network_is_player_talking(int player);
bool set_ped_can_play_gesture_anims(int ped, bool playgestureanims);
bool set_ped_can_play_ambient_anims(int ped, bool playabientanims);
bool set_ped_can_play_ambient_base_anims(int ped, bool playbaseanims);
void task_play_anim(int ped, char *animdict, char *animname, float unk, float unk1, int unk2, int unk3, int unk4, int unk5, int unk6, int unk7);
void task_enter_vehicle(int ped, int vehicle, int unk, int seat, float unk3, int unk4, int unk5);
void unk_0x4E8E29E6(int unk, int unk1);
void hide_hud_component_this_frame(int unk);
bool network_is_player_active(int player);
void task_follow_nav_mesh_to_coord(int ped, float x, float y, float z, float unk, int unk1, int unk2, int unk3, int unk4);
void attach_entity_to_entity(int car0, int car1, int unk, float x0, float y0, float z0, float x1, float y1, float z1, int unk1 = 0, int unk2 = 0, int unk3 = 0, int unk4 = 0, int unk5 = 2, int unk6 = 1);
void detach_entity(int entity);
void set_swim_speed_multiplier(int index, float multiplier);
void set_move_speed_multiplier(int index, float multiplier);
void set_explosive_ammo_this_frame(int index);
void set_fire_ammo_this_frame(int index);
void set_cube_ammo_this_frame(int index);
void set_explosive_melee_this_frame(int index);
void set_super_jump_this_frame(int index);
void clear_area_of_vehicles(float* Location, float Unk, int Unk2, int Unk3, int Unk4, int Unk5, int Unk6);
void task_leave_any_vehicle(int ped, int unk, int unk2);
bool can_register_mission_vehicles(int Unk);
int network_get_network_id_from_entity(int entity);
void set_entity_collision(int entity, bool collision);
void set_vehicle_doors_locked(int entity, int LockStatus);
bool is_entity_visible(int entity);
bool is_entity_attached(int entity);
int get_entity_model(int handle);
void apply_force_to_entity(int vehicle, unsigned int unknown0, float x, float y, float z, float spinX, float spinY, float spinZ, unsigned int unknown4, unsigned int unknown5_1, unsigned int unknown6_1, unsigned int unknown7_1, bool unk, bool unk1);
void set_player_wanted_level_now(int playerid, int wantedstars);
void unk_0x90D3A0D9(int vehicle, bool unk);
bool is_vehicle_on_all_wheels(int vehicle);
void set_entity_invincible(int entity, bool invincible);
void set_vehicle_is_stolen(int handle, int stolen);
void set_entity_as_no_longer_needed(int entity);
void get_model_dimensions(int model, float* Min, float* Max);
void delete_entity(int entity);
void set_weather_type_now_persist(char* weather);
void PopCarTyre(int vehicle, int tyre, bool r2, float r3);
bool IS_VEHICLE_TYRE_BURST(int vehicle, int wheelID, bool p2);
void clear_weather_type_persist();
bool is_ped_on_foot(int ped);
void request_weapon_asset(int Weapon, int Unk, int Unk2);
void set_vehicle_boost_active(int Vehicle, bool Enabled);
void set_network_id_exists_on_all_machines(int netid, int unk);
void unk_0xD3850671(int handle, int unk);
void unk_0x1D980479(char* Name, int unk, int unk2);
int GET_PED_PROP_INDEX(int ped, int componentId);
bool UnsureBoostFunc(int unk);
void GetEntityCoords(int entity, float *x, float *y, float *z);
int create_ped(int unk, int ModelHash, float X, float Y, float Z, float H, int Unk2, int Unk3);
void SetTextFont(int font);
void SetTextScale(float x, float y);
int get_player_group(int group);
bool does_group_exist(int group);
void set_ped_as_group_member(int pedhandle, int groupid);
void task_combat_ped(int handle, int attack, int unk, int unk2);
void SetTextColor(int a, int r, int g, int b);
void SetTextWrap(float x, float y);
void SetTextCenter(int value);
void unk_0x3E35563E(char *str);
void unk_0x12929BDF(DWORD a, DWORD b);
void unk_0x6F8350CE(float x, float y);
int get_ped_bone_index(int ped, int bone);
bool network_handle_from_player(int player, int FreeMemory, int ArraySize);
void network_send_text_message(char* Message, int FreeMemory);
bool HasModelLoaded(DWORD hash);
bool has_entity_been_damaged_by_entity(int PedHandle, int pedhandle2, bool unk);
bool get_ped_last_weapon_impact_coord(int PedID, float* OutCoords);
bool has_ped_been_damaged_by_weapon(int PedHandle, int weapon, bool unk);
bool get_current_ped_weapon(int PedHandle, int* OutWeaponHash, bool unk);
void PrintToScreenNum(int number, float x, float y, int r, int g, int b, int a, float scaleX, float scaleY, int centerText, int font);
void network_override_clock_time(int hour, int min, int sec);
int get_clock_hours();
void SetPlayerModel(int playerId, DWORD hash);
int give_achievement_to_player(int acheivement);
bool is_vehicle_in_burnout(int veh);
bool IsModelInCdImage(DWORD hash);
bool IsEntityVehicle(int entity);
bool DoesEntityExist(int entity);

void PaintCar(int carhandle, int paint, int paint1);
void PaintCarExtra(int carhandle, int paint, int paint1);

int GetCarCharIsIn(int unk, int playerid);
int irand(int min, int max, int Add);
void AddExplosion(float X, float Y, float Z, int ExplosionType, float radius, bool playsound, bool novisual, float camshake);
void AddTazer(float X, float Y, float Z, int ExplosionType, float radius, bool playsound, bool novisual, float camshake);
bool network_has_control_of_entity(int entity);
void set_entity_visible(int Entity, bool visable);
void set_vehicle_petrol_tank_health(int Vehicle, float Health);
void RequestModel(int hash);
void set_vehicle_rpm(int veh, float rpm);
int GET_NUMBER_OF_PLAYERS();
unsigned int CreateCar(int hash, float x, float y, float z, float h, int createhandle, bool unk);
bool is_player_free_aiming(int player);
int get_closest_vehicle(float x, float y, float z, float distance, int unk, int unk1);
bool is_player_targetting_anything(int player);
float get_entity_heading(int ped);
void set_entity_heading(int vehicle, float h);
void create_model_swap(float x, float y, float z, float unk, int modeltoswap, int swapto, int unk1);
float get_vehicle_petrol_tank_health(int Vehicle);
void freeze_entity_position(int entity, bool frozen);
unsigned int PlayerPedId();
void StartEntityFire(int playerid);
void ExplodeNetworkCar(int vehicle, boolean unknownTrue, boolean unknownFalse);
void set_entity_coords(int PedID, float X, float Y, float Z, int unk1 = 1, int unk2 = 0, int unk3 = 0, int unk4 = 1);
void PrintToScreen(char *str, float x, float y, int r, int g, int b, int a, float scaleX, float scaleY, int centerText, int font);
void play_sound_frontend(int time, const char* sound_name, const char* sound_dict);
BOOL IS_PLAYER_TARGETTING_ENTITY(int player, int entity);
void CLONE_PED(int ped, float header, bool createNetworkHandle, bool createPedHandle);
void ADD_OWNED_EXPLOSION(int ped, PFLOAT Origin, int ExplosionType, float radius, bool playsound, bool novisual, float camshake);
int GET_ENTITY_HEALTH(int Entity);
int GET_ENTITY_MAX_HEALTH(int Entity);
float get_entity_roll(int entity);
void PrintToScreenFloat(float number, float x, float y, int r, int g, int b, int a, float scaleX, float scaleY, int centerText, int font);
void create_ambient_pickup2(int Hash, float x, float y, float z, int r4, int value, int modelHash, int r8, int r9);
bool get_ped_last_weapon_impact_coord2(int Ped, float *Co);
void set_entity_coords2(int PedID, Vector3 *PosCoords);
void task_shuffle_to_next_vehicle_seat(int p0, int p1);// 7AA80209BDA643EB BEAF8F67
void SET_VEHICLE_ON_GROUND_PROPERLY(int vehicle); // 0x49733E92263139D1 0xE14FDBA6
void SHOOT_SINGLE_BULLET_BETWEEN_COORDS(float x, float y, float z, float x2, float y2, float z2, int unk, int unk1, int hash, int ped, int unk2, int unk3, float speed);
void _0x3E35563E(PCHAR String);
void _0x27A244D8(PCHAR String);
void _0x6F8350CE(FLOAT X, FLOAT Y);
void DisplayWhoIsTalking(char *text , float X2d, float Y2d);
PCHAR GET_PLAYER_NAME(INT PlayerIndex);
bool NETWORK_IS_PLAYER_MUTED_BY_ME(INT r1);
void DESTROY_CAM(int cam, bool destroy);
void DELETE_PED(int ped);
void SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(int vehicle, bool toggle);
void SET_PED_NEVER_LEAVES_GROUP(int ped, bool toggle);
void SET_PED_KEEP_TASK(int ped, bool toggle);
void SET_PED_ACCURACY(int ped, int accuracy);
void SET_PED_SHOOT_RATE(int ped, int shootRate);
void SET_PED_CAN_BE_DRAGGED_OUT(int ped, bool toggle);
void SET_PED_STAY_IN_VEHICLE_WHEN_JACKED(int ped, bool toggle);
void SET_PED_COMBAT_ABILITY(int ped, int p1);
int NETWORK_GET_HOST_OF_SCRIPT(char *gamemode, int p1, int p2);
void DRAW_LINE(float x1, float y1, float z1, float x2, float y2, float z2, int r, int g, int b, int alpha);
void create_ambient_pickup3(int Hash, Vector3 *Pos, int r5, int r6, int r7, int r8, int r9);
float GET_CONTROL_NORMAL(int p0, int p1);
void TASK_LOOK_AT_COORD(int p0, float x, float y, float z, int p4, int p5, int p6);
int OBJ_TO_NET(int object);
bool IS_MODEL_VALID(int hashModel);
void _CREATE_LIGHTNING_THUNDER();
void TASK_START_SCENARIO_IN_PLACE(int playerid, char *scenarioName, int unk, bool playEnterAnim);
void get_offset_from_entity_in_world_coords2(int Handle, float x, float y, float z);
int GET_NEAREST_PLAYER_TO_ENTITY(int entity);
int GET_GAME_TIMER();
void SET_GRAVITY_LEVEL(int level);
void SET_ENTITY_ALPHA(int entity, int alphaLevel, bool p2);
int GET_ENTITY_ALPHA(int entity);
void CLEAR_PED_BLOOD_DAMAGE(int ped);
void RESET_PED_VISIBLE_DAMAGE(int ped);
void SET_PLAYER_LOCKON(int ped, BOOL toggle);
void set_cam_coord(int cam, float posX, float posY, float posZ);
void TASK_VEHICLE_DRIVE_TO_COORD(int ped, int vehicle, float x, float y, float z, float speed, int p6, int vehicleModel, int drivingMode, float p9, float p10);
void SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(int vehicle, int plateIndex);
int START_SCRIPT_FIRE(float X, float Y, float Z, int maxChildren, bool isGasFire);
bool IS_VEHICLE_STOLEN(int vehicle);
void SET_VEHICLE_IS_STOLEN(int vehicle, bool isStolen);
void delete_vehicle2(int *vehicle);
int GET_VEHICLE_LIVERY_COUNT(int vehicle);
int GET_VEHICLE_LIVERY(int vehicle);
void SET_VEHICLE_LIVERY(int vehicle, int livery);
void CLEAR_AREA_OF_OBJECTS(float x, float y, float z, float radius, bool p4);
void CLEAR_AREA_OF_COPS(float x, float y, float z, float radius, int p4);
BOOL IS_ENTITY_ATTACHED_TO_ANY_OBJECT(int entity);
void CLEAR_AREA_OF_OBJECTS_CUSTOM(float x, float y, float z, float radius, BOOL unk);
void START_VEHICLE_HORN(int vehicle, int durationInMilli, int hashAction, bool p3);
void SET_VEHICLE_ALARM(int vehicle, bool state);
bool IS_ENTITY_ON_FIRE(int entity);
void EXPLODE_VEHICLE(int vehicle, bool isAudible, bool isInvisible);
void SET_VEHICLE_OUT_OF_CONTROL(int vehicle, bool p1, bool p2);
bool get_ped_last_weapon_impact_coord3(int ped, float *Outpos);
void set_entity_coords3(int PedID, float *x, float *y, float *z, int unk1, int unk2, int unk3, int unk4);
void SET_VEHICLE_FORWARD_SPEED(int vehicle, float speed);
int GET_ENTITY_ATTACHED_TO(int entity);
void delete_object2(int *object);
float* GET_GAMEPLAY_CAM_ROT(int unk = 0);
float* _GET_CAMERA_DIRECTION(float distance);
int DRAW_NOTIFICATION(bool blink, bool p1);
void ADD_TEXT_COMPONENT_STRING(char* text);
int _SET_NOTIFICATION_MESSAGE_CLAN_TAG_2(char *picName1, char *picName2, BOOL flash, int iconType1, char *sender, char *subject, float duration, char *clanTag, int iconType2);
void SET_NOTIFICATION_TEXT_ENTRY(char* type);
int _SET_NOTIFICATION_MESSAGE_CLAN_TAG(char *picName1, char *picName2, BOOL flash, int iconType, char *sender, char *subject, float duration, char *clanTag);
void SET_TIME_SCALE(float time);
INT GET_VEHICLE_PED_IS_USING(INT PED_ID);

// New custom paint job stuff
void GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(int vehicle, int *r, int *g, int *b);
void GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(int vehicle, int *r, int *g, int *b);


void GET_VEHICLE_MOD_COLOR_1(int vehicle, int *mod, int *index, int *var);
void GET_VEHICLE_MOD_COLOR_2(int vehicle, int *mod, int *index, int *var);

void GET_VEHICLE_EXTRA_COLOURS(int vehicle, int *p1, int *p2);
#endif
